"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9392],{6924:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"use-cases/postgresql-enum","title":"PostgreSQL Enum Types","description":"Using dropdown for PostgreSQL Enums into Directus with directus-sync","source":"@site/docs/use-cases/postgresql-enum.md","sourceDirName":"use-cases","slug":"/use-cases/postgresql-enum","permalink":"/directus-sync/docs/use-cases/postgresql-enum","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/use-cases/postgresql-enum.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Upgrading Directus","permalink":"/directus-sync/docs/use-cases/upgrade-directus"},"next":{"title":"Firewall Configurations","permalink":"/directus-sync/docs/troubleshooting/firewall-configurations"}}');var i=s(4848),r=s(3023);const o={sidebar_position:2},c="PostgreSQL Enum Types",a={},d=[{value:"What you see in Directus",id:"what-you-see-in-directus",level:2},{value:"A Workaround with directus-sync",id:"a-workaround-with-directus-sync",level:2},{value:"Results",id:"results",level:2},{value:"Considerations",id:"considerations",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"postgresql-enum-types",children:"PostgreSQL Enum Types"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Using dropdown for PostgreSQL Enums into Directus with ",(0,i.jsx)(n.code,{children:"directus-sync"})]})}),"\n",(0,i.jsxs)(n.p,{children:["Enumerated types (enums) in PostgreSQL provide a way to limit values in a column to a predefined set, improving data\nintegrity and user input validation. However, Directus does not natively support PostgreSQL enums and treats them as\n",(0,i.jsx)(n.code,{children:"unknown"})," types. Moreover, you cannot choose the interface type for an enum field in Directus, which defaults to a\ntext input. A common interface for enums would be a dropdown."]}),"\n",(0,i.jsxs)(n.p,{children:["This guide will show you how to use ",(0,i.jsx)(n.code,{children:"directus-sync"})," to change the interface type for an enum field to a dropdown in\nDirectus."]}),"\n",(0,i.jsx)(n.h2,{id:"what-you-see-in-directus",children:"What you see in Directus"}),"\n",(0,i.jsx)(n.p,{children:"When you use an existing PostgreSQL table with an enum field in Directus, you will see the following:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Schema"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Unkown type",src:s(5404).A+"",width:"840",height:"355"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Interface"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Void interface",src:s(6133).A+"",width:"836",height:"244"})}),"\n",(0,i.jsx)(n.h2,{id:"a-workaround-with-directus-sync",children:"A Workaround with directus-sync"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"directus-sync"})," can be used to bridge the gap between PostgreSQL enums and Directus dropdowns.\nHere's a step-by-step guide on how to achieve this:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Initial Configuration"}),": Set up the ",(0,i.jsx)(n.code,{children:"directus-sync"})," CLI as\ndescribed ",(0,i.jsx)(n.a,{href:"https://github.com/tractr/directus-sync",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Dump Directus Configurations"}),": Run ",(0,i.jsx)(n.code,{children:"npx directus-sync pull"})," to export your Directus instance's configuration\ninto separate JSON files. This step leverages\nthe ",(0,i.jsx)(n.a,{href:"https://docs.directus.io/reference/system/schema.html#retrieve-schema-snapshot",children:"snapshot endpoint of Directus"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Modify the Enum Field Configuration"}),": Identify and edit the JSON file corresponding to the enum field. For\ninstance, if adjusting an enum field within the ",(0,i.jsx)(n.code,{children:"organization"})," collection, you might find the file\nat ",(0,i.jsx)(n.code,{children:"directus-config/snapshot/fields/organization/type.json"}),". Here, you can manually set the ",(0,i.jsx)(n.code,{children:"meta.interface"}),' to\n"dropdown" and define ',(0,i.jsx)(n.code,{children:"meta.options"})," to reflect the enum values."]}),"\n",(0,i.jsx)(n.p,{children:"Example JSON adjustment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "collection": "organization",\n  "field": "type",\n  "type": "unknown",\n  "meta": {\n    "collection": "organization",\n    "conditions": null,\n    "display": "raw",\n    "display_options": null,\n    "field": "type",\n    "group": null,\n    "hidden": false,\n    "interface": "select-dropdown",\n    "note": null,\n    "options": {\n      "choices": [\n        {\n          "value": "startup",\n          "text": "Startup"\n        },\n        {\n          "value": "incubator",\n          "text": "Incubator"\n        },\n        {\n          "value": "enterprise",\n          "text": "Enterprise"\n        }\n      ]\n    },\n    "readonly": false,\n    "required": true,\n    "sort": 4,\n    "special": null,\n    "translations": null,\n    "validation": null,\n    "validation_message": null,\n    "width": "half"\n  },\n  "schema": {\n    "name": "type",\n    "table": "organization",\n    "data_type": "\\"OrganizationType\\"",\n    "default_value": null,\n    "max_length": null,\n    "numeric_precision": null,\n    "numeric_scale": null,\n    "is_nullable": false,\n    "is_unique": false,\n    "is_primary_key": false,\n    "is_generated": false,\n    "generation_expression": null,\n    "has_auto_increment": false,\n    "foreign_key_table": null,\n    "foreign_key_column": null\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Push the Changes"}),": Apply the edited schema back to your Directus instance with ",(0,i.jsx)(n.code,{children:"npx directus-sync push"}),", updating\nthe UI to display the dropdown as expected."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"results",children:"Results"}),"\n",(0,i.jsx)(n.p,{children:"After pushing the changes, you will see the following:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Interface"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Filled interface",src:s(6656).A+"",width:"841",height:"418"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Form"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dropdown",src:s(9749).A+"",width:"411",height:"238"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Search filter"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"search-filter-dropdown",src:s(2829).A+"",width:"490",height:"238"})}),"\n",(0,i.jsx)(n.h2,{id:"considerations",children:"Considerations"}),"\n",(0,i.jsxs)(n.p,{children:["Currently, we are not able to implement this with a multi-select dropdown. In Postgres, the format for a list of\nenums is ",(0,i.jsx)(n.code,{children:"{value1,value2,value3}"}),". Directus doesn't natively parse and stringify this format. A custom transformer,\nlike ",(0,i.jsx)(n.code,{children:"cast-csv"}),", could potentially be incorporated\nhere: ",(0,i.jsx)(n.a,{href:"https://github.com/directus/directus/blob/main/api/src/services/payload.ts#L130-L145",children:"Directus Payload Service"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},9749:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/dropdown-b1047de9d2eefaa0bd981194465bb7f1.png"},6656:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/filled-interface-348096c8f1d156e0f2cd3d110b26b983.png"},6133:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/interface-00798b2866c99e7c2f3ba79a396b826f.png"},5404:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/schema-4be209e29fb0455374fb1f0b6ca76da4.png"},2829:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/search-filter-dropdown-9608071c767ccbf24b83099282a50bfc.png"},3023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);