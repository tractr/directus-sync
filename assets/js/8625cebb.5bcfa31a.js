"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6055,6722,8082,9980],{4120:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>p,contentTitle:()=>d,default:()=>f,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"features/synchronization","title":"Synchronization","description":"Basic Workflow","source":"@site/docs/features/synchronization.mdx","sourceDirName":"features","slug":"/features/synchronization","permalink":"/directus-sync/docs/features/synchronization","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/features/synchronization.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Quick Start Guide","permalink":"/directus-sync/docs/getting-started/usage"},"next":{"title":"Seed Data","permalink":"/directus-sync/docs/features/seed"}}');var o=t(4848),l=t(3023),c=t(8508),i=t(1824),a=t(1813);const r={sidebar_position:1},d="Synchronization",p={},h=[{value:"Basic Workflow",id:"basic-workflow",level:2},{value:"Pull",id:"pull",level:2},...c.toc,{value:"Diff",id:"diff",level:2},...a.toc,{value:"Push",id:"push",level:2},...i.toc,{value:"Common Options",id:"common-options",level:2},{value:"Collection Management",id:"collection-management",level:3},{value:"Include/Exclude Collections",id:"includeexclude-collections",level:4},{value:"ID Preservation",id:"id-preservation",level:4},{value:"Schema Options",id:"schema-options",level:3},{value:"Advanced Usage",id:"advanced-usage",level:3},{value:"Retry Configuration",id:"retry-configuration",level:4},{value:"Environment Variables",id:"environment-variables",level:3}];function u(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"synchronization",children:"Synchronization"})}),"\n",(0,o.jsx)(s.h2,{id:"basic-workflow",children:"Basic Workflow"}),"\n",(0,o.jsx)(s.mermaid,{value:"sequenceDiagram\n    participant A as Directus Instance A\n    participant Local as Local Files\n    participant B as Directus Instance B\n\n    Note over A: Make configurations\n    A->>Local: pull\n    Local->>B: push\n    Note over A: Make more configurations\n    A->>Local: pull\n    Local--\x3e>Local: diff\n    Note right of Local: Compare changes\n    Local->>B: push"}),"\n",(0,o.jsx)(s.h2,{id:"pull",children:"Pull"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-shell",children:"npx directus-sync pull\n"})}),"\n",(0,o.jsx)(s.p,{children:"Retrieves the current schema and collections from Directus and stores them locally. This command does not modify the database."}),"\n",(0,o.jsxs)(s.p,{children:["It also retrieves the specifications (GraphQL & OpenAPI) and stores them locally. It gets specifications from the ",(0,o.jsx)(s.code,{children:"/server/specs/*"})," endpoints:"]}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://docs.directus.io/reference/system/server.html#get-openapi-specification",children:"OpenAPI"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://docs.directus.io/reference/system/server.html#get-graphql-schema",children:"GraphQL SDL (Item & System scopes)"})}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Available Options"})}),"\n",(0,o.jsx)(c.default,{}),"\n",(0,o.jsx)(s.h2,{id:"diff",children:"Diff"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-shell",children:"npx directus-sync diff\n"})}),"\n",(0,o.jsx)(s.p,{children:"Analyzes and describes the difference (diff) between your local schema and collections and the state of the Directus instance. This command is non-destructive and does not apply any changes to the database."}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Available Options"})}),"\n",(0,o.jsx)(a.default,{}),"\n",(0,o.jsx)(s.h2,{id:"push",children:"Push"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-shell",children:"npx directus-sync push\n"})}),"\n",(0,o.jsx)(s.p,{children:"Applies the changes from your local environment to the Directus instance. This command pushes your local schema and collection configurations to Directus, updating the instance to reflect your local state."}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Available Options"})}),"\n",(0,o.jsx)(i.default,{}),"\n",(0,o.jsx)(s.h2,{id:"common-options",children:"Common Options"}),"\n",(0,o.jsx)(s.h3,{id:"collection-management",children:"Collection Management"}),"\n",(0,o.jsx)(s.h4,{id:"includeexclude-collections",children:"Include/Exclude Collections"}),"\n",(0,o.jsx)(s.p,{children:"Include only specific collections"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --only-collections roles,permissions\n"})}),"\n",(0,o.jsx)(s.p,{children:"Exclude specific collections"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --exclude-collections settings\n"})}),"\n",(0,o.jsx)(s.h4,{id:"id-preservation",children:"ID Preservation"}),"\n",(0,o.jsx)(s.p,{children:"Preserve IDs for specific collections"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --preserve-ids roles,panels\n"})}),"\n",(0,o.jsx)(s.p,{children:"Preserve all possible IDs"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --preserve-ids all\n"})}),"\n",(0,o.jsx)(s.h3,{id:"schema-options",children:"Schema Options"}),"\n",(0,o.jsx)(s.p,{children:"Skip schema operations"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --no-snapshot\n"})}),"\n",(0,o.jsx)(s.p,{children:"Keep schema in single file"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --no-split\n"})}),"\n",(0,o.jsx)(s.p,{children:"Skip API specs"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync pull --no-specs\n"})}),"\n",(0,o.jsx)(s.h3,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,o.jsx)(s.p,{children:"Force diff even with version mismatch"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync diff --force\n"})}),"\n",(0,o.jsx)(s.h4,{id:"retry-configuration",children:"Retry Configuration"}),"\n",(0,o.jsx)(s.p,{children:"Set maximum push retries.\nRetries occur when a dependency between collections could not be resolved."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"npx directus-sync push --max-push-retries 30\n"})}),"\n",(0,o.jsx)(s.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,o.jsx)(s.p,{children:"Instead of command-line options, you can use environment variables for authentication:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"DIRECTUS_URL=https://directus.example.com\nDIRECTUS_TOKEN=your-token\n"})}),"\n",(0,o.jsx)(s.p,{children:"OR"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"DIRECTUS_ADMIN_EMAIL=admin@example.com\nDIRECTUS_ADMIN_PASSWORD=your-password\n"})}),"\n",(0,o.jsx)(s.admonition,{type:"tip",children:(0,o.jsxs)(s.p,{children:["You can check the ",(0,o.jsx)(s.a,{href:"/docs/features/configuration",children:"configuration options"})," for more information."]})})]})}function f(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1813:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"help-outputs/diff","title":"diff","description":"","source":"@site/docs/help-outputs/diff.md","sourceDirName":"help-outputs","slug":"/help-outputs/diff","permalink":"/directus-sync/docs/help-outputs/diff","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/help-outputs/diff.md","tags":[],"version":"current","frontMatter":{}}');var o=t(4848),l=t(3023);const c={},i=void 0,a={},r=[];function d(e){const s={code:"code",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-text",children:'Options:\n  --dump-path <dumpPath>                          the base path for the dump (default "./directus-config")\n  --collections-path <collectionPath>             the path for the collections dump, relative to the dump path (default "collections")\n  -x, --exclude-collections <excludeCollections>  comma separated list of collections to exclude from the process (default to none)\n  -o, --only-collections <onlyCollections>        comma separated list of collections to include in the process (default to all)\n  --snapshot-path <snapshotPath>                  the path for the schema snapshot dump, relative to the dump path (default "snapshot")\n  --no-snapshot                                   should pull and push the Directus schema (default "true")\n  --no-split                                      should split the schema snapshot into multiple files (default "true")\n  -f, --force                                     force the diff of schema, even if the Directus version is different (default "false")\n  -h, --help                                      display help for command\n'})})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8508:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"help-outputs/pull","title":"pull","description":"","source":"@site/docs/help-outputs/pull.md","sourceDirName":"help-outputs","slug":"/help-outputs/pull","permalink":"/directus-sync/docs/help-outputs/pull","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/help-outputs/pull.md","tags":[],"version":"current","frontMatter":{}}');var o=t(4848),l=t(3023);const c={},i=void 0,a={},r=[];function d(e){const s={code:"code",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-text",children:'Options:\n  --dump-path <dumpPath>                          the base path for the dump (default "./directus-config")\n  --collections-path <collectionPath>             the path for the collections dump, relative to the dump path (default "collections")\n  -x, --exclude-collections <excludeCollections>  comma separated list of collections to exclude from the process (default to none)\n  -o, --only-collections <onlyCollections>        comma separated list of collections to include in the process (default to all)\n  --preserve-ids <preserveIds>                    comma separated list of collections that preserve their original ids (default to none). Use "*" or "all" to preserve all ids, if applicable.\n  --snapshot-path <snapshotPath>                  the path for the schema snapshot dump, relative to the dump path (default "snapshot")\n  --no-snapshot                                   should pull and push the Directus schema (default "true")\n  --no-split                                      should split the schema snapshot into multiple files (default "true")\n  --specs-path <specsPath>                        the path for the specifications dump (GraphQL & OpenAPI), relative to the dump path (default "specs")\n  --no-specs                                      should dump the GraphQL & OpenAPI specifications (default "true")\n  -h, --help                                      display help for command\n'})})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1824:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"help-outputs/push","title":"push","description":"","source":"@site/docs/help-outputs/push.md","sourceDirName":"help-outputs","slug":"/help-outputs/push","permalink":"/directus-sync/docs/help-outputs/push","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/help-outputs/push.md","tags":[],"version":"current","frontMatter":{}}');var o=t(4848),l=t(3023);const c={},i=void 0,a={},r=[];function d(e){const s={code:"code",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-text",children:'Options:\n  --dump-path <dumpPath>                          the base path for the dump (default "./directus-config")\n  --collections-path <collectionPath>             the path for the collections dump, relative to the dump path (default "collections")\n  -x, --exclude-collections <excludeCollections>  comma separated list of collections to exclude from the process (default to none)\n  -o, --only-collections <onlyCollections>        comma separated list of collections to include in the process (default to all)\n  --preserve-ids <preserveIds>                    comma separated list of collections that preserve their original ids (default to none). Use "*" or "all" to preserve all ids, if applicable.\n  --snapshot-path <snapshotPath>                  the path for the schema snapshot dump, relative to the dump path (default "snapshot")\n  --no-snapshot                                   should pull and push the Directus schema (default "true")\n  --no-split                                      should split the schema snapshot into multiple files (default "true")\n  -f, --force                                     force the diff of schema, even if the Directus version is different (default "false")\n  --max-push-retries <maxPushRetries>             the number of retries for the push operation (default "20")\n  -h, --help                                      display help for command\n'})})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},3023:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>i});var n=t(6540);const o={},l=n.createContext(o);function c(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);