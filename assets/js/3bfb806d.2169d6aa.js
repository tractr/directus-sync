"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2830],{8126:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"how-it-works/schema-management","title":"Schema Management","description":"The Directus schema, which defines the data modeling and user interface, is managed by the Directus API. However, for better code repository management, directus-sync stores the schema elements in separate files organized within a clear directory structure. This separation allows developers to easily track changes to the schema and apply version control principles to the database structure.","source":"@site/docs/how-it-works/schema-management.md","sourceDirName":"how-it-works","slug":"/how-it-works/schema-management","permalink":"/docs/how-it-works/schema-management","draft":false,"unlisted":false,"editUrl":"https://github.com/directus-sync/directus-sync/tree/main/website/docs/how-it-works/schema-management.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Synchronization Process","permalink":"/docs/how-it-works/synchronization-process"},"next":{"title":"Upgrading Directus","permalink":"/docs/use-cases/upgrade-directus"}}');var a=t(4848),i=t(3023);const r={sidebar_position:3},o="Schema Management",c={},h=[{value:"Schema Snapshots",id:"schema-snapshots",level:2},{value:"What is a Schema Snapshot?",id:"what-is-a-schema-snapshot",level:3},{value:"Storage Format",id:"storage-format",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"schema-management",children:"Schema Management"})}),"\n",(0,a.jsxs)(s.p,{children:["The Directus schema, which defines the data modeling and user interface, is managed by the Directus API. However, for better code repository management, ",(0,a.jsx)(s.code,{children:"directus-sync"})," stores the schema elements in separate files organized within a clear directory structure. This separation allows developers to easily track changes to the schema and apply version control principles to the database structure."]}),"\n",(0,a.jsx)(s.h2,{id:"schema-snapshots",children:"Schema Snapshots"}),"\n",(0,a.jsx)(s.h3,{id:"what-is-a-schema-snapshot",children:"What is a Schema Snapshot?"}),"\n",(0,a.jsx)(s.p,{children:"A schema snapshot is a complete representation of your Directus instance's data model, including:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Collections"}),"\n",(0,a.jsx)(s.li,{children:"Fields"}),"\n",(0,a.jsx)(s.li,{children:"Relations"}),"\n",(0,a.jsx)(s.li,{children:"Field Groups"}),"\n",(0,a.jsx)(s.li,{children:"Custom Displays"}),"\n",(0,a.jsx)(s.li,{children:"Interfaces"}),"\n",(0,a.jsx)(s.li,{children:"Layouts"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"storage-format",children:"Storage Format"}),"\n",(0,a.jsx)(s.p,{children:"By default, schema snapshots are:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Stored in the ",(0,a.jsx)(s.code,{children:"snapshot"})," directory"]}),"\n",(0,a.jsx)(s.li,{children:"Split into multiple files for better readability"}),"\n",(0,a.jsx)(s.li,{children:"Formatted in JSON for version control"}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"directus-config/\n\u2514\u2500\u2500 snapshot/\n    \u251c\u2500\u2500 collections/\n    \u2502   \u251c\u2500\u2500 articles.json\n    \u2502   \u2514\u2500\u2500 categories.json\n    \u251c\u2500\u2500 fields/\n    \u2502   \u251c\u2500\u2500 articles.json\n    \u2502   \u2514\u2500\u2500 categories.json\n    \u2514\u2500\u2500 relations/\n        \u2514\u2500\u2500 articles_categories.json\n"})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},3023:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(6540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);